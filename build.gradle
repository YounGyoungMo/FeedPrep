plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    // 아임포트
    maven { url 'https://jitpack.io' }
}

jacoco{
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

jacocoTestCoverageVerification {
    dependsOn test
    classDirectories.setFrom(
            files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        '**/Q*.class'
                ])
            })
    )
    violationRules {
        rule {
            element = 'BUNDLE'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.20
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport, jacocoTestCoverageVerification
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

    // H2 - 테스트용 DB
    testImplementation 'com.h2database:h2'
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // H2
    implementation 'com.h2database:h2'

    // S3
    implementation platform('software.amazon.awssdk:bom:2.20.90')
    implementation 'software.amazon.awssdk:s3:2.20.46'
    implementation 'software.amazon.awssdk:auth:2.20.46'
    implementation 'software.amazon.awssdk:regions:2.20.46'

    implementation 'mysql:mysql-connector-java:8.0.33'
    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

    //Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.27.2'

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Redis +Cache
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.data:spring-data-redis'
    implementation 'org.apache.commons:commons-pool2'

    // 아임포트
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
    implementation 'io.portone:server-sdk:0.19.0'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}

tasks.named('test') {
    useJUnitPlatform()
}
