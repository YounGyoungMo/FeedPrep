name: Test on PR to main

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run tests and generate coverage
        run: ./gradlew test jacocoTestReport jacocoTestCoverageVerification
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          FEEDPREP_ACCESS_KEY: ${{ secrets.FEEDPREP_ACCESS_KEY }}
          FEEDPREP_SECRET_KEY: ${{ secrets.FEEDPREP_SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_AUTH: ${{ secrets.TEST_AUTH }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          PORTONE_STOREID: ${{ secrets.PORTONE_STOREID }}
          PORTONE_APISECRET: ${{ secrets.PORTONE_APISECRET }}
          PORTONE_WEBHOOK_SECRET: ${{ secrets.PORTONE_WEBHOOK_SECRET }}
          PORTONE_CHANNELKEY: ${{ secrets.PORTONE_CHANNELKEY }}

      - name: Check Jacoco report file
        run: ls -l build/reports/jacoco/test/

      - name: Show part of Jacoco report
        run: head -20 build/reports/jacoco/test/jacocoTestReport.xml

      - name: Parse coverage report
        id: coverage
        run: |
          LINE_COUNTER=$(grep '<counter type="LINE"' build/reports/jacoco/test/jacocoTestReport.xml | tail -n 1)

          MISSED=$(echo "$LINE_COUNTER" | grep -o 'missed="[0-9]\+"' | head -1 | grep -o '[0-9]\+')
          COVERED=$(echo "$LINE_COUNTER" | grep -o 'covered="[0-9]\+"' | head -1 | grep -o '[0-9]\+')

          echo "MISSED=$MISSED"
          echo "COVERED=$COVERED"

          if [ -z "$MISSED" ]; then
            MISSED=0
          fi
          if [ -z "$COVERED" ]; then
            COVERED=0
          fi

          TOTAL=$((MISSED + COVERED))
          if [ "$TOTAL" -eq 0 ]; then
            PERCENT=0
          else
            PERCENT=$(echo "scale=2; 100 * $COVERED / ($COVERED + $MISSED)" | bc)
          fi

          echo "coverage=$PERCENT" >> $GITHUB_OUTPUT

      - name: Comment PR with coverage
        uses: actions/github-script@v7
        with:
          script: |
            const coverage = `${{ steps.coverage.outputs.coverage }}`
            const comment = `ðŸ§ª **Jacoco Coverage Report**: ${coverage}%`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })