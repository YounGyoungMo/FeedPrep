name: Test on PR to main

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Make gradlew executable
        run: chmod +x ./gradlew


      - name: Run tests and generate Jacoco coverage report
        run: ./gradlew test jacocoTestReport
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          FEEDPREP_ACCESS_KEY: ${{ secrets.FEEDPREP_ACCESS_KEY }}
          FEEDPREP_SECRET_KEY: ${{ secrets.FEEDPREP_SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_AUTH: ${{ secrets.TEST_AUTH }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          PORTONE_STOREID: ${{ secrets.PORTONE_STOREID }}
          PORTONE_APISECRET: ${{ secrets.PORTONE_APISECRET }}
          PORTONE_WEBHOOK_SECRET: ${{ secrets.PORTONE_WEBHOOK_SECRET }}
          PORTONE_CHANNELKEY: ${{ secrets.PORTONE_CHANNELKEY }}

      - name: Check Jacoco report exists
        run: ls -l ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Parse coverage report and extract coverage %
        id: coverage
        run: |
          MISSED=$(grep -oE 'missed="[0-9]+"' ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml | head -1 | grep -oE '[0-9]+')
          HIT=$(grep -oE 'covered="[0-9]+"' ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml | head -1 | grep -oE '[0-9]+')
          if [ -z "$MISSED" ]; then MISSED=0; fi
          if [ -z "$HIT" ]; then HIT=0; fi
          PERCENT=$(echo "scale=2; 100 * $HIT / ($HIT + $MISSED)" | bc)
          echo "coverage=$PERCENT" >> $GITHUB_OUTPUT

      - name: Comment coverage on PR
        uses: actions/github-script@v7
        with:
          script: |
            const coverage = `${{ steps.coverage.outputs.coverage }}`
            const body = `ðŸ§ª **Jacoco Coverage Report**: ${coverage}%`
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body,
            })